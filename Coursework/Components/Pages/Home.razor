@page "/login"
@inject NavigationManager NavigationManager
@inject DatabaseService.Services.DatabaseServices DatabaseService
@using System.ComponentModel.DataAnnotations
@using Coursework.Models
@using DatabaseService.Services

<div class="container mt-5">
    <h2>Login Customer</h2>

    <EditForm Model="@loginModel" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <InputText id="email" type="email" class="form-control" @bind-Value="loginModel.Email" />
            <ValidationMessage For="@(() => loginModel.Email)" />
        </div>

        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
            <ValidationMessage For="@(() => loginModel.Password)" />
        </div>

        <button type="submit" class="btn btn-primary">Login</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(statusMessage))
    {
        <div class="mt-3 alert @(statusMessage.Contains("error") ? "alert-danger" : "alert-success")">
            @statusMessage
        </div>
    }
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string statusMessage = string.Empty;

    private async Task OnValidSubmit()
    {
        try
        {
            var validCustomer = await DatabaseService.GetCustomerByEmailAsync(loginModel.Email);

            if (validCustomer == null)
            {
                statusMessage = "Invalid email or password!";
                return;
            }

            // Assuming passwords are stored in plain text (not recommended for production)
            if (validCustomer.password == loginModel.Password)
            {
                statusMessage = "Login successful!";
                NavigationManager.NavigateTo("/addtransaction"); // Navigate to the next page on success
            }
            else
            {
                statusMessage = "Invalid email or password!";
            }
        }
        catch (Exception ex)
        {
            statusMessage = $"An error occurred: {ex.Message}";
        }
    }
}