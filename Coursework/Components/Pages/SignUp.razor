@* @page "/signUp" *@
@* @using Coursework.Models *@
@* @using Coursework.Services *@
@* @inject DatabaseService DatabaseService *@
@* *@
@* <PageTitle>Register Customer</PageTitle> *@
@* *@
@* <h3>Customer List</h3> *@
@* <ul> *@
@*     @foreach (var customer in customers) *@
@*     { *@
@*         <li>@customer.CustomerName - @customer.Email</li> *@
@*     } *@
@* </ul> *@
@* *@
@* <h3>Add Customer</h3> *@
@* <div> *@
@*     <label for="name">Name:</label> *@
@*     <input id="name" @bind="customerName" placeholder="Customer Name" /> *@
@* </div> *@
@* <div> *@
@*     <label for="email">Email:</label> *@
@*     <input id="email" @bind="email" placeholder="Email" type="email" /> *@
@* </div> *@
@* <div> *@
@*     <label for="mobile">Mobile:</label> *@
@*     <input id="mobile" @bind="mobile" placeholder="Mobile" type="tel" /> *@
@* </div> *@
@* <button @onclick="AddCustomer">Save</button> *@
@* *@
@* <p>@statusMessage</p> *@
@* *@
@* @code { *@
@*     private List<Customer> customers = new(); *@
@*     private string customerName = string.Empty; *@
@*     private string email = string.Empty; *@
@*     private string mobile = string.Empty; *@
@*     private string statusMessage = string.Empty; *@
@* *@
@*     protected override async Task OnInitializedAsync() *@
@*     { *@
@*         try *@
@*         { *@
@*             // Load existing customers when the page is initialized *@
@*             customers = await DatabaseService.GetCustomersAsync(); *@
@*         } *@
@*         catch (Exception ex) *@
@*         { *@
@*             statusMessage = $"Error loading customers: {ex.Message}"; *@
@*         } *@
@*     } *@
@* *@
@*     private async Task AddCustomer() *@
@*     { *@
@*         if (string.IsNullOrWhiteSpace(customerName) || string.IsNullOrWhiteSpace(email) || string.IsNullOrWhiteSpace(mobile)) *@
@*         { *@
@*             statusMessage = "Please fill in all fields."; *@
@*             return; *@
@*         } *@
@* *@
@*         try *@
@*         { *@
@*             var newCustomer = new Customer *@
@*             { *@
@*                 CustomerName = customerName, *@
@*                 Email = email, *@
@*                 Mobile = mobile *@
@*             }; *@
@* *@
@*             // Save the customer to the database *@
@*             await DatabaseService.SaveCustomerAsync(newCustomer); *@
@* *@
@*             // Refresh customer list *@
@*             customers = await DatabaseService.GetCustomersAsync(); *@
@* *@
@*             // Reset input fields *@
@*             customerName = string.Empty; *@
@*             email = string.Empty; *@
@*             mobile = string.Empty; *@
@* *@
@*             statusMessage = "Customer added successfully!"; *@
@*         } *@
@*         catch (Exception ex) *@
@*         { *@
@*             statusMessage = $"Error adding customer: {ex.Message}"; *@
@*         } *@
@*     } *@
@* } *@
